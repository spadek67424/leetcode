/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        /*
        ListNode dummy(INT_MIN);
        ListNode *tail = &dummy;
        
        while (l1 && l2) {
            if (l1->val < l2->val) {
                tail->next = l1;
                l1 = l1->next;
            } else {
                tail->next = l2;
                l2 = l2->next;
            }
            tail = tail->next;
        }

        tail->next = l1 ? l1 : l2;
        return dummy.next;
        */
        ListNode* temp3= new ListNode(0);
        printf("%d",temp3->val);
        ListNode* temp=temp3;
        if(l1==NULL){return l2;}
        if(l2==NULL){return l1;}
       
        while(l1!=NULL && l2)
        {
           
            if(l1->val<=l2->val)
            {
                temp->next=l1;
                l1=l1->next;
            }
            else
            {
                temp->next=l2;
                l2=l2->next;
            }
            temp=temp->next;
        
        }
        temp->next=l1? l1:l2;
        printf("c");
        return temp3->next;

    }
};
